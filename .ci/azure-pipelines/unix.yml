jobs:
- job: ${{ parameters.OS_NAME }}_${{ parameters.BUILD_SYSTEM }}_${{ parameters.BUILD_TYPE }}_${{ parameters.MODE }}
  displayName: '${{ parameters.OS_NAME }} ${{ parameters.BUILD_SYSTEM }}: ${{ parameters.BUILD_TYPE }}, ${{ parameters.MODE }}'

  timeoutInMinutes: 0

  pool:
    ${{ if eq(parameters.OS_NAME, 'Linux') }}:
      vmImage: ubuntu-16.04
    ${{ if eq(parameters.OS_NAME, 'macOS') }}:
      vmImage: macos-10.13

  ${{ if eq(parameters.OS_NAME, 'Linux') }}:
    container:
      image: ubuntu:16.04
      options: "--name ci-container -v /usr/bin/docker:/tmp/docker:ro"

  variables:
    ${{ insert }}: ${{ parameters }}

  steps:
  - ${{ if eq(parameters.OS_NAME, 'Linux') }}:
    # https://github.com/Microsoft/azure-pipelines-agent/issues/2043#issuecomment-489692810
    - script: |
        /tmp/docker exec -t -u 0 ci-container \
          sh -c "apt-get update && DEBIAN_FRONTEND=noninteractive apt-get -o Dpkg::Options::="--force-confold" -y install sudo"
      displayName: Set up sudo
    
  - script: .ci/unix/dump-vm-specs.sh
    displayName: Dump VM specs

  - script: printenv
    displayName: Dump environment variables

  - script: |
      set -e
      cd ..
      curl -L --retry 3 https://github.com/$WRF_REPO/archive/$WRF_COMMIT.tar.gz | tar xz
      mv $WRF_REPO-$WRF_COMMIT WRF
    displayName: Download WRF

  - script: ../WRF/.ci/unix/setup-dependencies.sh
    displayName: Setup dependencies

  - script: ../WRF/.ci/unix/install-wrf.sh
    displayName: Install WRF

  - script: .ci/unix/install-wps.sh
    displayName: Install WPS

  - ${{ if eq(parameters.WATS_RUN, 'true') }}:
    - template: wats_run.yml
